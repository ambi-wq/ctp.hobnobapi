# Generated by Django 3.2.5 on 2021-07-05 15:54

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('userprofile', '0009_auto_20210317_1013'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CuratedEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(help_text='Name of Events', max_length=240)),
                ('description', models.TextField(blank=True, help_text='Description of Events', null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('categoery', models.ManyToManyField(blank=True, null=True, related_name='categoery', to='userprofile.Interest')),
            ],
        ),
        migrations.CreateModel(
            name='ImagesUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_img', models.ImageField(upload_to='event_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('event_id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('event_name', models.CharField(help_text='Name of Events', max_length=240)),
                ('event_type', models.CharField(choices=[('Private', 'Private'), ('Public', 'Public'), ('Close Friends', 'Close Friends')], help_text='Type of Events', max_length=50)),
                ('description', models.TextField(help_text='Description of Events')),
                ('event_city', models.CharField(blank=True, help_text='City of Events', max_length=100, null=True)),
                ('location', models.CharField(help_text='Location of Events, Inclues City and Country Code', max_length=240)),
                ('event_location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('event_address', models.TextField(blank=True, help_text='Event Address', null=True)),
                ('event_date', models.DateField()),
                ('event_time_from', models.TimeField(blank=True, null=True)),
                ('event_time_to', models.TimeField(blank=True, null=True)),
                ('event_price', models.FloatField(blank=True, help_text='Creator Can add Price of Events', null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('event_interest', models.ManyToManyField(blank=True, null=True, related_name='event_interest', to='userprofile.Interest')),
                ('interested_users', models.ManyToManyField(blank=True, null=True, related_name='interested_user', to=settings.AUTH_USER_MODEL)),
                ('invited_users', models.ManyToManyField(blank=True, null=True, related_name='invited_users', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_creator', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventInterestedUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_accepted', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.events')),
                ('hosted_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_hosted_user', to=settings.AUTH_USER_MODEL)),
                ('interested_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_interested_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_img', models.ImageField(upload_to='event_images/')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='events.events')),
            ],
        ),
        migrations.CreateModel(
            name='EventComments',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('comment_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_user', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_comments', to='events.events')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='events.eventcomments')),
            ],
            options={
                'ordering': ['create_at'],
            },
        ),
        migrations.CreateModel(
            name='CurateImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='currated_images/')),
                ('curated_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='currated_images', to='events.curatedevents')),
            ],
        ),
    ]
